[{"C:\\Users\\Dat Ngo\\Desktop\\ReactApp\\my-app\\src\\index.js":"1","C:\\Users\\Dat Ngo\\Desktop\\ReactApp\\my-app\\src\\App.js":"2","C:\\Users\\Dat Ngo\\Desktop\\ReactApp\\my-app\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1607143138676,"results":"4","hashOfConfig":"5"},{"size":1712,"mtime":1607143978597,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"chvxrr",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\Dat Ngo\\Desktop\\ReactApp\\my-app\\src\\index.js",[],["16","17"],"C:\\Users\\Dat Ngo\\Desktop\\ReactApp\\my-app\\src\\App.js",["18"],"\n\nimport React from 'react';\nimport { render } from 'react-dom';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {rect: {x: 0, y: 0}};\n  }\n  \n  render() {\n    return (\n      <div>\n      <svg viewBox=\"0 0 100 100\" ref={(svg) => this.svg = svg}>\n        <rect\n          x={this.state.rect.x}\n          y={this.state.rect.y}\n          width=\"20\"\n          height=\"20\"\n          ref={(e) => this.svgRectElem = e}\n          onMouseDown={(e) => this.startDrag(e, this.svgRectElem)}\n        />\n      </svg>\n        Position: <br />\n        X: {this.state.rect.x}<br />\n        Y: {this.state.rect.y}\n      </div>\n    );\n  }\n  \n  startDrag(event, draggedElem) {\n    event.preventDefault();\n    let point = this.svg.createSVGPoint();\n    point.x = event.clientX;\n    point.y = event.clientY;\n    point = point.matrixTransform(this.svg.getScreenCTM().inverse());\n    this.setState({dragOffset: {\n      x: point.x - this.state.rect.x,\n      y: point.y - this.state.rect.y\n    }});\n    \n    const mousemove = (event) => {\n      event.preventDefault();\n      point.x = event.clientX;\n      point.y = event.clientY;\n      let cursor = point.matrixTransform(this.svg.getScreenCTM().inverse());\n      this.setState({rect: {\n        x: cursor.x - this.state.dragOffset.x,\n        y: cursor.y - this.state.dragOffset.y\n      }});\n    };\n    \n    const mouseup = (event) => {\n      document.removeEventListener(\"mousemove\", mousemove);\n      document.removeEventListener(\"mouseup\", mouseup);\n    };\n    \n    document.addEventListener(\"mousemove\", mousemove);\n    document.addEventListener(\"mouseup\", mouseup);\n  }\n}\n\n// render(<Rect />, document.getElementById('root'));\n\n\nexport default App;\n","C:\\Users\\Dat Ngo\\Desktop\\ReactApp\\my-app\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":4,"column":10,"nodeType":"25","messageId":"26","endLine":4,"endColumn":16},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]